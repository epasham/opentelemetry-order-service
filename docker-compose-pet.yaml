version: '3'
services:
  spring-petclinic:
    image: ekambaram/spring-petclinic:otel
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/petclinic
      - SPRING_PROFILES_ACTIVE=postgres
      - OTEL_SERVICE_NAME=petclinic
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - collector

  collector:
    container_name: collector
    image: otel/opentelemetry-collector:0.54.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317" # OTLP gRPC receiver
      - "4318"
    depends_on:
      - tempo

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "3200"  # tempo as grafana datasource


  grafana:
    container_name: grafana
    image: grafana/grafana:10.1.1
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - tempo

  postgres:
    container_name: postgres
    image: postgres:16.1
    environment:
      - POSTGRES_PASSWORD=petclinic
      - POSTGRES_USER=petclinic
      - POSTGRES_DB=petclinic
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
